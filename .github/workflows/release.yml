name: Release Pipeline

on:
  push:
    tags: ["*"]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.14
        uses: actions/setup-python@v5
        with:
          python-version: "3.14"

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: "latest"

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-3.14-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-3.14-

      - name: Install just
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin

      - name: Install dependencies
        run: just install-dev

      - name: Build package
        run: just build

      - name: Get package version
        id: package_version
        run: |
          # Extract version from the built wheel file
          WHEEL_FILE=$(ls dist/wiserate-*-py3-none-any.whl | head -1)
          if [ -z "$WHEEL_FILE" ]; then
            echo "Error: No wheel file found in dist/"
            exit 1
          fi
          echo "Debug: Found wheel file: $WHEEL_FILE"

          # Extract just the version number using basename and sed
          FILENAME=$(basename "$WHEEL_FILE")
          echo "Debug: Filename: $FILENAME"

          VERSION=$(echo "$FILENAME" | sed 's/wiserate-\([0-9]\+\.[0-9]\+\.[0-9]\+\)-.*\.whl/\1/')
          if [ -z "$VERSION" ]; then
            echo "Error: Could not extract version from wheel file: $FILENAME"
            exit 1
          fi

          echo "Debug: Extracted version: $VERSION"

          # Validate version format (should be x.y.z)
          if ! echo "$VERSION" | grep -qE '^[0-9]+\.[0-9]+\.[0-9]+$'; then
            echo "Error: Invalid version format: $VERSION (expected x.y.z)"
            exit 1
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Found version: $VERSION"

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ steps.package_version.outputs.version }}
          body: |
            ## Installation

            **Using uv (recommended - fastest):**
            ```bash
            uv add git+https://github.com/Amet13/WiseRate.git@${{ steps.package_version.outputs.version }}
            ```

            **Using pipx:**
            ```bash
            pipx install git+https://github.com/Amet13/WiseRate.git@${{ steps.package_version.outputs.version }}
            ```

            **Using pip with venv:**
            ```bash
            python3 -m venv wiserate-env
            source wiserate-env/bin/activate
            pip install git+https://github.com/Amet13/WiseRate.git@${{ steps.package_version.outputs.version }}
            ```

            ## Usage

            ```bash
            wiserate --help
            ```

            ## Documentation

            See [README.md](README.md) for full documentation.
          files: |
            dist/wiserate-${{ steps.package_version.outputs.version }}-*.whl
            dist/wiserate-${{ steps.package_version.outputs.version }}.tar.gz
          draft: false
          prerelease: false
