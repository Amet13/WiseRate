name: Release Pipeline

on:
  push:
    tags: ["*"]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for changelog generation

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Build package
        run: |
          make build

      - name: Get package version
        id: package_version
        run: |
          # Extract version from the built wheel file
          WHEEL_FILE=$(ls dist/wiserate-*-py3-none-any.whl | head -1)
          VERSION=$(echo "$WHEEL_FILE" | sed 's/wiserate-\(.*\)-py3-none-any.whl/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Found version: $VERSION"

      - name: Generate changelog
        id: changelog
        run: |
          # Get the current tag (triggered by tag push)
          CURRENT_TAG=${GITHUB_REF#refs/tags/}

          # Get the previous release tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")

          # Generate changelog directly without creating a file
          if [ -z "$PREVIOUS_TAG" ]; then
            # First release, get all commits
            CHANGELOG=$(python scripts/generate_changelog.py ${{ steps.package_version.outputs.version }} --stdout)
          else
            # Get commits since last release
            CHANGELOG=$(python scripts/generate_changelog.py ${{ steps.package_version.outputs.version }} $PREVIOUS_TAG --stdout)
          fi

          # Set output for next steps
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: WiseRate-package
          path: dist/

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: WiseRate ${{ github.ref_name }}
          body: |
            ## What's Changed

            ${{ steps.changelog.outputs.changelog }}

            ## Installation

            ```bash
            pip install wiserate
            ```

            ## Usage

            ```bash
            wiserate --help
            ```

            ## Documentation

            See [README.md](README.md) for full documentation.
          files: |
            dist/wiserate-*.whl
            dist/wiserate-*.tar.gz
          draft: false
          prerelease: false
