name: Publish Release

on:
  push:
    tags:
      - "*.*.*" # Semantic versioning tags (e.g., 2.5.0)
  workflow_dispatch:
    inputs:
      tag:
        description: "Release version in semantic versioning format (e.g., 2.5.0)"
        required: true
        type: string

jobs:
  release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Full history for version detection

      - name: Setup environment
        uses: ./.github/actions/setup-environment

      - name: Run tests
        uses: ./.github/actions/run-tests

      - name: Build package
        uses: ./.github/actions/build-package

      - name: Get package version
        id: package_version
        run: |
          # Get version from git tag or workflow input
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            INPUT_TAG="${{ github.event.inputs.tag }}"
            echo "Input tag received: $INPUT_TAG"
            # Remove 'v' prefix if present (for backwards compatibility)
            VERSION="${INPUT_TAG#v}"
            # Use semantic versioning without 'v' prefix
            TAG="$VERSION"
          else
            # For push events, use the actual tag that was pushed
            TAG="${GITHUB_REF#refs/tags/}"
            echo "Tag from push event: $TAG"
            # Remove 'v' prefix if present (for backwards compatibility)
            VERSION="${TAG#v}"
          fi

          # Validate semantic version format (should be x.y.z)
          if ! echo "$VERSION" | grep -qE '^[0-9]+\.[0-9]+\.[0-9]+$'; then
            echo "Error: Invalid semantic version format: $VERSION (expected x.y.z)"
            echo "Please use semantic versioning format like: 2.5.0"
            exit 1
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Found version: $VERSION from tag: $TAG"

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package_version.outputs.tag }}
          name: ${{ steps.package_version.outputs.version }}
          body: |
            ## Installation

            **Using uv (recommended - fastest):**
            ```bash
            uv pip install git+https://github.com/Amet13/WiseRate.git@${{ steps.package_version.outputs.tag }} --system
            ```

            **Using pip:**
            ```bash
            pip install git+https://github.com/Amet13/WiseRate.git@${{ steps.package_version.outputs.tag }}
            ```

            ### Quick Start

            ```bash
            wiserate --help
            ```

            ### Requirements

            - Python 3.14 or higher
            - uv (recommended) or pip

            ### Documentation

            See [README.md](README.md) for full documentation and examples.
          files: |
            dist/wiserate-${{ steps.package_version.outputs.version }}-*.whl
            dist/wiserate-${{ steps.package_version.outputs.version }}.tar.gz
          draft: false
          prerelease: ${{ contains(steps.package_version.outputs.version, 'alpha') || contains(steps.package_version.outputs.version, 'beta') || contains(steps.package_version.outputs.version, 'rc') }}
